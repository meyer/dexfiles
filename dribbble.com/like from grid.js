// Generated by CoffeeScript 1.6.3
(function() {
  (function(d) {
    var SHOTS_BY_ID, changeFavStatus, clickTime, dblclkTimeout, id, likeIndicatorTime, likePending, shot, showLikeIndicator, _ref, _results;
    likePending = false;
    likeIndicatorTime = 1200;
    SHOTS_BY_ID = {};
    if (d.loggedIn) {
      showLikeIndicator = function(shotID, options) {
        var $eff, $likeIndicator, $shot, unnn;
        if (likePending) {
          if (likePending !== shotID) {
            console.log('WAT');
            return false;
          }
        }
        unnn = '';
        if ('action' in options) {
          if (options.action === 'like') {

          } else if (options.action === 'unlike') {
            unnn = 'un ';
          } else {
            return false;
          }
        }
        $shot = $("#screenshot-" + shotID);
        $likeIndicator = $("<div class='" + unnn + "like-indicator'><div></div></div>");
        return $eff = $('.dribbble-shot', $shot).append($likeIndicator);
      };
      changeFavStatus = function(shotID, like_or_unlike) {
        var $likeLink, $shot, $shotLink, post_obj, shot;
        if (likePending) {
          console.log("ALREADY LIKING SHOT " + likePending);
          return false;
        }
        likePending = shotID;
        shot = d.shots[shotID];
        $shot = $("#screenshot-" + shotID);
        $shotLink = $('.dribbble-over', $shot);
        $likeLink = $('li.fav a', $shot);
        if (like_or_unlike === 'toggle') {
          like_or_unlike = 'like';
          if (shot.liked) {
            like_or_unlike = 'unlike';
          }
        }
        if (like_or_unlike !== 'like' && like_or_unlike !== 'unlike') {
          likePending = false;
          return;
        }
        post_obj = {
          data: {},
          type: 'POST',
          url: "" + d.profileURL + "/likes"
        };
        if (shot.liked && like_or_unlike === 'like') {
          showLikeIndicator(shot.id, {
            action: 'like'
          });
          console.log("Shot " + shot.id + " already liked! Dummy!");
          likePending = false;
          return;
        } else if (!shot.liked && like_or_unlike === 'unlike') {
          console.log("Shot " + shot.id + " already unliked! Stupid!");
          likePending = false;
          return;
        }
        if (like_or_unlike === 'unlike') {
          post_obj.data = {
            _method: 'delete'
          };
          post_obj.url = "" + post_obj.url + "/" + shot.id;
        } else {
          post_obj.url = "" + post_obj.url + "?screenshot_id=" + shot.id;
        }
        console.log("Here’s the plan: we’re gonna " + like_or_unlike + " shot number " + shot.id);
        return $.ajax(post_obj).complete(function(x, status) {
          if (status === 'success') {
            if (like_or_unlike === 'unlike') {
              $likeLink.parent().removeClass('marked');
              $likeLink.text(--shot.likes_count);
              shot.liked = false;
              showLikeIndicator(shot.id, {
                action: 'unlike'
              });
              console.log('UN LIEK');
            } else {
              $likeLink.parent().addClass('marked');
              $likeLink.text(++shot.likes_count);
              shot.liked = true;
              showLikeIndicator(shot.id, {
                action: 'like'
              });
              console.log('LIEK');
            }
          }
          likePending = false;
        });
      };
      clickTime = 300;
      dblclkTimeout = false;
      if (d.shots) {
        _ref = d.shots;
        _results = [];
        for (id in _ref) {
          shot = _ref[id];
          _results.push((function(id) {
            var $shot, clickCount;
            $shot = $("#screenshot-" + id);
            $("li.fav a", $shot).click(function() {
              changeFavStatus(id, 'toggle');
              return false;
            });
            clickCount = 0;
            return $('.dribbble-over', $shot).click(function(e) {
              var _this = this;
              if (e.metaKey) {
                return;
              }
              clickCount++;
              clearTimeout(dblclkTimeout);
              if (clickCount >= 2) {
                if (clickCount === 2) {
                  changeFavStatus(id, 'like');
                } else {
                  console.log(clickCount + ' clicks and counting!');
                }
                dblclkTimeout = setTimeout(function() {
                  return clickCount = 0;
                }, clickTime);
              } else {
                dblclkTimeout = setTimeout(function() {
                  if (clickCount !== 2) {
                    console.log('Double-click didn’t happen. *single tear rolls down face*');
                    document.location.href = $(_this).attr('href');
                  }
                  return clickCount = 0;
                }, clickTime);
              }
              return false;
            });
          })(id));
        }
        return _results;
      }
    }
  })(window.dexfiles.dribbble);

}).call(this);
